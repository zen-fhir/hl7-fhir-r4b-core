{ns hl7-fhir-r4b-core.Subscription,
 import #{hl7-fhir-r4b-core.DomainResource
          zen.fhir
          hl7-fhir-r4b-core.url
          hl7-fhir-r4b-core.string
          hl7-fhir-r4b-core.BackboneElement
          hl7-fhir-r4b-core.value-set.mimetypes
          hl7-fhir-r4b-core.value-set.subscription-status
          hl7-fhir-r4b-core.code
          hl7-fhir-r4b-core.value-set.subscription-channel-type
          hl7-fhir-r4b-core.instant
          hl7-fhir-r4b-core.ContactPoint
          hl7-fhir-r4b-core.Element},
 schema {:zen.fhir/version "0.6.31",
         :confirms #{zen.fhir/Resource
                     hl7-fhir-r4b-core.DomainResource/schema},
         :zen/tags #{zen/schema zen.fhir/base-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/Subscription",
         :require #{:criteria :channel :reason :status},
         :type zen/map,
         :zen/desc "The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system can take an appropriate action.",
         :keys {:_end {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :criteria {:confirms #{hl7-fhir-r4b-core.string/schema},
                           :fhir/flags #{:SU},
                           :zen/desc "Rule for server push"},
                :_status {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :channel {:confirms #{hl7-fhir-r4b-core.BackboneElement/schema},
                          :type zen/map,
                          :keys {:type {:confirms #{hl7-fhir-r4b-core.code/schema},
                                        :fhir/flags #{:SU},
                                        :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.subscription-channel-type/value-set,
                                                             :strength :required},
                                        :zen/desc "rest-hook | websocket | email | sms | message"},
                                 :_type {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                                 :endpoint {:confirms #{hl7-fhir-r4b-core.url/schema},
                                            :fhir/flags #{:SU},
                                            :zen/desc "Where the channel points to"},
                                 :_endpoint {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                                 :payload {:confirms #{hl7-fhir-r4b-core.code/schema},
                                           :fhir/flags #{:SU},
                                           :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.mimetypes/value-set,
                                                                :strength :required},
                                           :zen/desc "MIME type to send, or omit for no payload"},
                                 :_payload {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                                 :header {:type zen/vector,
                                          :every {:confirms #{hl7-fhir-r4b-core.string/schema},
                                                  :fhir/flags #{:SU},
                                                  :zen/desc "Usage depends on the channel type"}},
                                 :_header {:type zen/vector,
                                           :every {:confirms #{hl7-fhir-r4b-core.Element/schema}}}},
                          :require #{:type},
                          :fhir/flags #{:SU},
                          :zen/desc "The channel on which to report matches to the criteria"},
                :_criteria {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :reason {:confirms #{hl7-fhir-r4b-core.string/schema},
                         :fhir/flags #{:SU},
                         :zen/desc "Description of why this subscription was created"},
                :status {:confirms #{hl7-fhir-r4b-core.code/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.subscription-status/value-set,
                                              :strength :required},
                         :zen/desc "requested | active | error | off"},
                :_reason {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :error {:confirms #{hl7-fhir-r4b-core.string/schema},
                        :fhir/flags #{:SU},
                        :zen/desc "Latest error note"},
                :_error {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :end {:confirms #{hl7-fhir-r4b-core.instant/schema},
                      :fhir/flags #{:SU},
                      :zen/desc "When to automatically delete the subscription"},
                :contact {:type zen/vector,
                          :every {:confirms #{hl7-fhir-r4b-core.ContactPoint/schema},
                                  :fhir/flags #{:SU},
                                  :zen/desc "Contact details for source (e.g. troubleshooting)"}}},
         :zen.fhir/type "Subscription"}}
