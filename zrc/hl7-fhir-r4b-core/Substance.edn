{ns hl7-fhir-r4b-core.Substance,
 import #{hl7-fhir-r4b-core.DomainResource
          zen.fhir
          hl7-fhir-r4b-core.value-set.substance-code
          hl7-fhir-r4b-core.Identifier
          hl7-fhir-r4b-core.Reference
          hl7-fhir-r4b-core.string
          hl7-fhir-r4b-core.Substance
          hl7-fhir-r4b-core.BackboneElement
          hl7-fhir-r4b-core.value-set.substance-category
          hl7-fhir-r4b-core.CodeableConcept
          hl7-fhir-r4b-core.SimpleQuantity
          hl7-fhir-r4b-core.code
          hl7-fhir-r4b-core.Ratio
          hl7-fhir-r4b-core.dateTime
          hl7-fhir-r4b-core.value-set.substance-status
          hl7-fhir-r4b-core.Quantity
          hl7-fhir-r4b-core.Element},
 schema {:zen.fhir/version "0.6.30",
         :confirms #{zen.fhir/Resource
                     hl7-fhir-r4b-core.DomainResource/schema},
         :zen/tags #{zen/schema zen.fhir/base-schema},
         :zen.fhir/profileUri "http://hl7.org/fhir/StructureDefinition/Substance",
         :require #{:code},
         :type zen/map,
         :zen/desc "A homogeneous material with a definite composition.",
         :keys {:description {:confirms #{hl7-fhir-r4b-core.string/schema},
                              :fhir/flags #{:SU},
                              :zen/desc "Textual description of the substance, comments"},
                :category {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r4b-core.CodeableConcept/schema},
                                   :fhir/flags #{:SU},
                                   :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.substance-category/value-set,
                                                        :strength :extensible},
                                   :zen/desc "What class/type of substance this is"}},
                :instance {:type zen/vector,
                           :every {:confirms #{hl7-fhir-r4b-core.BackboneElement/schema},
                                   :type zen/map,
                                   :keys {:identifier {:confirms #{hl7-fhir-r4b-core.Identifier/schema},
                                                       :fhir/flags #{:SU},
                                                       :zen/desc "Identifier of the package/container"},
                                          :expiry {:confirms #{hl7-fhir-r4b-core.dateTime/schema},
                                                   :fhir/flags #{:SU},
                                                   :zen/desc "When no longer valid to use"},
                                          :_expiry {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                                          :quantity {:confirms #{hl7-fhir-r4b-core.SimpleQuantity/schema
                                                                 hl7-fhir-r4b-core.Quantity/schema},
                                                     :fhir/flags #{:SU},
                                                     :zen/desc "Amount of substance in the package"}},
                                   :fhir/flags #{:SU},
                                   :zen/desc "If this describes a specific package/container of the substance"}},
                :_status {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :_description {:confirms #{hl7-fhir-r4b-core.Element/schema}},
                :ingredient {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r4b-core.BackboneElement/schema},
                                     :type zen/map,
                                     :keys {:quantity {:confirms #{hl7-fhir-r4b-core.Ratio/schema},
                                                       :fhir/flags #{:SU},
                                                       :zen/desc "Optional amount (concentration)"},
                                            :substance {:fhir/polymorphic true,
                                                        :type zen/map,
                                                        :exclusive-keys #{#{:CodeableConcept
                                                                            :Reference}},
                                                        :keys {:CodeableConcept {:confirms #{hl7-fhir-r4b-core.CodeableConcept/schema}},
                                                               :Reference {:confirms #{zen.fhir/Reference
                                                                                       hl7-fhir-r4b-core.Reference/schema},
                                                                           :zen.fhir/reference {:refers #{hl7-fhir-r4b-core.Substance/schema}}}},
                                                        :fhir/flags #{:SU},
                                                        :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.substance-code/value-set,
                                                                             :strength :example},
                                                        :zen/desc "A component of the substance"}},
                                     :require #{:substance},
                                     :fhir/flags #{:SU},
                                     :zen/desc "Composition information about the substance"}},
                :status {:confirms #{hl7-fhir-r4b-core.code/schema},
                         :fhir/flags #{:SU :?!},
                         :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.substance-status/value-set,
                                              :strength :required},
                         :zen/desc "active | inactive | entered-in-error"},
                :code {:confirms #{hl7-fhir-r4b-core.CodeableConcept/schema},
                       :fhir/flags #{:SU},
                       :zen.fhir/value-set {:symbol hl7-fhir-r4b-core.value-set.substance-code/value-set,
                                            :strength :example},
                       :zen/desc "What substance this is"},
                :identifier {:type zen/vector,
                             :every {:confirms #{hl7-fhir-r4b-core.Identifier/schema},
                                     :fhir/flags #{:SU},
                                     :zen/desc "Unique identifier"}}},
         :zen.fhir/type "Substance"}}
